Assignment - 2

Q1. Objective: Create a SQL query to generate a comprehensive report detailing each airline's name along with the distinct airports they operate from and the distinct types of aircraft they use. This report aims to provide insights into the operational scope and fleet diversity of airlines.
Task Details: Write a SQL query that lists each airline along with a comma-separated list of distinct airports they operate from and distinct aircraft types in their fleet.
Expected Results Format:
•	Columns to display: Airline Name, Airports Operated, Aircrafts Used
•	Order the results by Airline Name in alphabetical order.
 

Q2. Objective: Develop a SQL query to produce a report that summarizes the number of flights operated by each airline on each day of the week. This report aims to help analyze traffic patterns and optimize airline scheduling strategies.
Task Details: Write a SQL query that calculates the number of flights each airline operates on each day of the week.
Expected Results Format:
•	Columns to display: Airline Name, Day of the Week, Flight Count
•	Order the results primarily by the total number of flights in descending order, then by the day of the week and airline name.
 
Q3. Objective: Develop a SQL query to generate a report detailing the total revenue generated by each airline on each day of the week from ticket sales. This report will help in understanding daily revenue patterns and optimizing pricing strategies.
Task Details: Write a SQL query that calculates the total revenue collected from ticket sales for each airline, broken down by the day of the week of the flight's departure. Expected Results Format:
•	Columns to display: Airline Name, Day of the Week, Total Revenue
•	Order the results primarily by Total Revenue in descending order, and then by Airline Name and Day of the Week for further organization.
 
Q4. Objective: Craft a SQL query to produce a report that details the total number of flights departing from each airport in December and the average ticket price for those flights. This report aims to help analyze airport activity and pricing strategies during the peak travel month.
Task Details: Write a SQL query that calculates the total number of flights and the average ticket price for flights departing from each airport in December.
Expected Results Format:
•	Columns to display: Airport Name, Total Flights, Average Ticket Price
•	Order the results by Average Ticket Price in descending order, and by Airport Name for a secondary sort.
 
Q5. To calculate and rank the total flight duration for each passenger, identifying those who have spent the most time in the air. This information will be valuable for recognizing frequent flyers and tailoring loyalty programs or promotions accordingly.
Data Ordering:
- List passengers starting with the one who has the highest cumulative flight time, using the total flight duration as the primary sorting criterion in descending order.
- Use **`Passengerid`** in ascending order as a secondary sorting criterion to manage entries with identical flight durations.
Expected Outcome:
A prioritized list of passengers based on the total time they have spent flying, which can be utilized for enhancing customer relationship management, marketing strategies, and loyalty reward allocations.
Sample Screenshot of Output
 
Q6. Objective:
To assess and rank airlines by their average flight airtime, providing insights into operational efficiency and service performance. This analysis is intended to facilitate comparisons among airlines, aiding consumers and regulatory bodies in making informed choices and evaluations.
Data Ordering:
- Sort the results primarily by average airtime in ascending order to place the most efficient airlines at the top of the list.
- Within the same average airtime, sort by airline code in ascending order to maintain a consistent and orderly ranking.
Expected Outcome: A ranked list of airlines based on their average flight airtime, from most to least efficient. This report will enable stakeholders to benchmark airline performance, potentially influencing consumer choices, regulatory oversight, and internal airline strategies aimed at improving efficiency.
Sample Screenshot of Output
 
Q7. Objective:
To analyze and report on the financial performance and operational activity of airlines based on average ticket prices, total fare collected, and total flights operated. This comprehensive dataset will help stakeholders to assess each airline's market position and financial health, aiding in strategic decision-making and competitive analysis.
Data Ordering:
- Order the results by the airline code in ascending order, ensuring that the report is easy to navigate and understand, with airlines listed in a standard alphabetical or numerical order based on their code.
Expected Outcome: A structured report providing a clear overview of each airline's average ticket pricing, revenue from fares, and operational volume. This data will enable analysts and industry stakeholders to compare airlines on these critical financial and operational metrics, guiding potential investment decisions and marketing strategies.
Sample Screenshot of Output
 
Q8. Objective:
To compile and provide detailed itineraries for passengers, including individual flight data and summarized flight activity metrics. This analysis aims to give a comprehensive view of each passenger's travel history and financial expenditures on flights, useful for customer service enhancements, personalized marketing, and loyalty program management.
Requirements:
1.	Data Extraction and Calculation:
o	Construct passenger profiles from two derived tables:
	PassengerSummary: Calculate total flights, average fare, and total flight duration for each passenger.
	Itinerary: List all flights for each passenger with flight-specific details and aggregated data from the PassengerSummary.
o	Retrieve the following details for inclusion in the Itinerary:
	Passenger Identifier (Passengerid)
	First Name (Firstname)
	Last Name (Lastname)
	Flight Identifier (flight_id)
	Departure Airport Name (DepartureAirport)
	Arrival Airport Name (ArrivalAirport)
	Flight Duration (flight_duration)
	Fare Paid (total_fare)
	Total Number of Flights (TotalFlights)
	Average Fare Paid (AverageFare)
	Total Flight Duration (TotalFlightDuration)
	Sequential Order of Flight based on Departure Time (FlightOrder)
2.	Data Ordering:
o	Order the final output first by Passengerid in ascending order to align information per passenger systematically.
o	Within each passenger's data, order flights based on the sequential order of departure (FlightOrder) to provide a chronological travel history.
Expected Outcome: The query will generate a detailed itinerary for each passenger, showcasing individual flights in sequence along with summarized data on total flights, average fare, and total time spent in the air. This organized and detailed report will help the airline to better understand customer behavior, enhance customer engagement strategies, and tailor services to improve the overall travel experience.
Sample Screenshot of Output
 
Q9. Objective
Create a report that identifies passengers who have traveled more than once on the same aircraft within any given month of a year. This analysis aims to determine frequent flyers who repeatedly use the same aircraft.
Ordering
•	Primary Sorting: Sort the list by the count of distinct flights each passenger has taken on the same aircraft in descending order.
•	Secondary Sorting: For passengers with the same count, sort by their first name and then last name in ascending order.
Expected Outcome
•	The report will list each passenger's first name and last name, along with the number of distinct flights they have taken on the same aircraft where the aircraft has been used more than once in any month.
•	Only passengers who have traveled on multiple flights using the same aircraft will be included.
•	Passengers will be ranked to show those with the highest number of flights on the same aircraft at the top, followed by others in alphabetical order when counts are tied.
Sample Screenshot of Output
 
Q10. Objective
Create a report that lists passengers who have flown on their birthdays. This aims to identify cases where a passenger's date of birth aligns exactly with the departure date of their flight, offering insights for potential marketing strategies or loyalty program enhancements.
Ordering
•	Primary Sorting: Sort the results by flight ID in ascending order.
•	Secondary Sorting: Within the same flight, order passengers alphabetically by first name and then by last name.
Expected Outcome
•	The report will include the passenger's first name, last name, and the flight ID for flights taken on the passenger's birthday.
•	Each entry should show passengers grouped by the flight ID, facilitating easy identification of birthday flights within specific journeys.
Sample Screenshot of Output
 
Q11. Objective: Create a SQL query to generate a report that lists all flights departing on Fridays. This report is aimed at analyzing flight schedules to better understand traffic patterns and staffing needs on weekends.
Task Details: Write a SQL query that selects the flight ID and departure time for flights that depart specifically on a Friday. This will help identify flights that could have an impact on weekend travel and operations.
Expected Results Format:
•	Columns to display: Flight ID, Departure Time
•	Order the results by Flight ID in ascending order.
 
Q12. Objective: Create a SQL query to generate a report detailing the average flight duration for each aircraft model by month and year. This report is designed to assist in evaluating aircraft performance and operational efficiency over different periods.
Task Details: Write a SQL query that calculates the average duration of flights for each aircraft model, broken down by month and year.
Expected Results Format:
•	Columns to display: Aircraft Model, Month, Year, Average Duration (in minutes)
•	Order the results by Aircraft Model, Year, Month, and Average Duration.
 
Q13. Objective: Develop a SQL query to create a report that lists the number of distinct passengers arriving at each airport for each month and year. This report aims to assess the passenger traffic and facilitate capacity planning.
Task Details: Write a SQL query that counts the number of unique passengers arriving at each airport per month and year.
Expected Results Format:
•	Columns to display: Airport Name, Month, Year, Total Arriving Passengers
•	Order the results by Airport Name and then by Month of arrival.
 